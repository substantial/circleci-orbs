version: 2.1
description: Yarn commands

orbs:
  node: circleci/node@0.0.7

commands:
  install:
    description: "yarn install"
    parameters:
      yarn-version:
        type: string
        description: Version of yarn to use.
        default: 1.13.0
      cache-version:
        type: string
        description: Cache version; increment this for a fresh cache.
        default: v1
      save-cache:
        type: boolean
        description: Set to false to save cache on your own. Useful for monorepos.
        default: true

    steps:
      - node/install-package-manager:
          yarn: true
          yarn_version: << parameters.yarn-version >>
      - run:
          name: Setup NPM token
          command: |
            if [ "$NPM_TOKEN" ]; then
              echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
            fi
      - restore_cache:
          name: "Restore node_modules Cache"
          keys:
            - yarnpkg-<< parameters.cache-version >>-{{ arch }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarnpkg-<< parameters.cache-version >>-{{ arch }}-{{ .Branch }}-
            - yarnpkg-<< parameters.cache-version >>-{{ arch }}-
      - run:
          name: "Run yarn install"
          command: |
            yarn --frozen-lockfile
      - run:
          name: "Run yarn audit"
          command: |
            set +e
            yarn audit
            result=$?
            set -e

            if [ "$result" != 0 ]; then
              if [ -f yarn-audit-known-issues ]; then
                set +e
                yarn audit --json | grep auditAdvisory > yarn-audit-issues
                set -e

                if diff -q yarn-audit-known-issues yarn-audit-issues > /dev/null 2>&1; then
                  echo
                  echo Ignorning known vulnerabilities
                  exit 0
                fi
              fi

              echo
              echo Security vulnerabilities were found that were not ignored
              echo
              echo Check to see if these vulnerabilities apply to production
              echo and/or if they have fixes available. If they do not have
              echo fixes and they do not apply to production, you may ignore them
              echo
              echo To ignore these vulnerabilities, run:
              echo
              echo "yarn audit --json | grep auditAdvisory > yarn-audit-known-issues"
              echo
              echo and commit the yarn-audit-known-issues file

              exit "$result"
            fi
      - when:
          condition: << parameters.save-cache >>
          steps:
            - save_cache:
                name: "Save node_modules Cache"
                key: yarnpkg-<< parameters.cache-version >>-{{ arch }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
                paths:
                  - ~/.cache/yarn
                  - ~/project/node_modules
