version: 2.1
description: Common node build commands

commands:
  eslint:
    description: "Run eslint"
    steps:
      - run:
          name: Run Lint
          command: |
            `npm bin`/eslint --ext .js,.jsx,.tsx,.ts \
              --format junit -o test-results/eslint-results.xml .

  jest:
    description: "Run jest tests"
    parameters:
      task-name:
        description: Name of task
        type: string
        default: Run Tests
      working-directory:
        description: Directory to run jest in.
        type: string
        default: ~/project
      max-workers:
        type: integer
        description: Number of jest workers to run.
        default: 4
    steps:
      - run:
          name: << parameters.task-name >>
          working_directory: << parameters.working-directory >>
          command: |
            `npm bin`/jest --ci --reporters=default \
              --reporters=jest-junit \
              --maxWorkers=<< parameters.max-workers >>
          environment:
            JEST_JUNIT_OUTPUT: ~/project/test-results/jest-results.xml

  store-results:
    description: "Store test results"
    steps:
      - store_test_results:
          path: ./test-results
      - store_artifacts:
          path: ./test-results
          destination: test-results

  release:
    description: "Release to npm if on appropriate branch"
    parameters:
      release-branch:
        type: string
        description: Name of branch to release on
        default: master
    steps:
      - run:
          name: Release if on master
          command: |
            if [ "$CIRCLE_BRANCH" = "<< parameters.release-branch >>" ]; then
              `npm bin`/semantic-release || true
            fi

  typecheck:
    description: "Check typescript types"
    parameters:
      task-name:
        description: Name of task
        type: string
        default: Run Typecheck
      working-directory:
        description: Directory to run typecheck in.
        type: string
        default: ~/project
    steps:
      - run:
          name: << parameters.task-name >>
          working_directory: << parameters.working-directory >>
          command: |
            `npm bin`/tsc
